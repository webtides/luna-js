{"version":3,"file":"client.js","sources":["../node_modules/@webtides/element-js/src/util/AttributeParser.js","../node_modules/@webtides/element-js/src/util/DOMHelper.js","../node_modules/@webtides/element-js/src/BaseElement.js","../node_modules/@webtides/element-js/src/StyledElement.js","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/directives/unsafe-html.js","../packages/client/elements/moon-element.js","../packages/client/elements/moon-down-element.js","../packages/client/layouts/base.js","../packages/framework/hooks/definitions.js","../packages/client/functions/network.js","../index.js"],"sourcesContent":["export function isObjectLike(value) {\n\treturn typeof value == 'object' && value !== null;\n}\n\nexport function isJSON(str) {\n\ttry {\n\t\treturn JSON.parse(str) && !!str;\n\t} catch (e) {\n\t\treturn false;\n\t}\n}\n\nexport function isBoolean(value) {\n\treturn value === 'true' || value === 'false';\n}\n\nexport function parseBoolean(value) {\n\treturn value === 'true';\n}\n\nexport function isString(value) {\n\treturn (\n\t\ttypeof value === 'string' ||\n\t\t(!!value && typeof value === 'object' && Object.prototype.toString.call(value) === '[object String]')\n\t);\n}\n\nexport function isNumber(value) {\n\treturn new RegExp('^-?(0|0\\\\.\\\\d+|[1-9]\\\\d*(\\\\.\\\\d+)?)$').test(value);\n}\n\nexport function isNaN(value) {\n\treturn Number.isNaN(value);\n}\n\nexport function parseAttribute(value) {\n\tif (!isString(value)) {\n\t\treturn value;\n\t}\n\n\tlet parsedValue = value;\n\n\tif (isJSON(value)) parsedValue = JSON.parse(value);\n\telse if (isBoolean(value)) parsedValue = parseBoolean(value);\n\telse if (isNumber(value)) parsedValue = parseFloat(value);\n\n\treturn parsedValue;\n}\n\n/**\n * Replaces dashed-expression (i.e. some-value) to a camel-cased expression (i.e. someValue)\n * @returns string\n */\nexport function dashToCamel(string) {\n\tif (string.indexOf('-') === -1) return string;\n\n\treturn string.replace(/-[a-z]/g, (matches) => matches[1].toUpperCase());\n}\n\n/**\n * Replaces camel-cased expression (i.e. someValue) to a dashed-expression (i.e. some-value)\n * @returns string\n */\nexport function camelToDash(string) {\n\treturn string.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\n","export function getAllParentNodes(domNode) {\n\tlet node = domNode.parentElement;\n\tlet parents = [];\n\twhile (node) {\n\t\tparents.unshift(node); // adds node to the beginning of parents\n\t\tnode = node.parentElement;\n\t}\n\n\treturn parents;\n}\n\n// https://stackoverflow.com/questions/27453617/how-can-i-tell-if-an-element-is-in-a-shadow-dom\nexport function getShadowParentOrBody(element) {\n\tif (element instanceof ShadowRoot) {\n\t\treturn element;\n\t}\n\n\twhile (element.parentNode && (element = element.parentNode)) {\n\t\tif (element instanceof ShadowRoot) {\n\t\t\treturn element;\n\t\t}\n\t}\n\treturn document.body;\n}\n\n// TODO: add function for getClosestParentOfNodeType('custom-element')\n\nexport function getClosestParentCustomElementNode(domNode) {\n\tconst customElementParents = getAllParentNodes(domNode).filter((node) => {\n\t\treturn node.localName && node.localName.indexOf('-') !== -1;\n\t});\n\n\treturn customElementParents.pop();\n}\n\nexport function isOfSameNodeType(nodeA, nodeB) {\n\tif (!nodeA && !nodeA.localName) return false;\n\tif (!nodeB && !nodeB.localName) return false;\n\treturn nodeA.localName === nodeB.localName;\n}\n\nexport const supportsAdoptingStyleSheets = () =>\n\t'adoptedStyleSheets' in Document.prototype && 'replace' in CSSStyleSheet.prototype;\n\n// for IE11 we are using the ShadyDOM Polyfill. With the polyfill we cannot append stylesheets to the shadowRoot\nexport const supportsAppendingStyleSheets = !window.ShadyDOM;\n","import { parseAttribute, isNaN, dashToCamel, camelToDash, isObjectLike } from './util/AttributeParser.js';\nimport { getClosestParentCustomElementNode, isOfSameNodeType } from './util/DOMHelper.js';\nexport { defineElement } from './util/defineElement';\nexport { toString } from './util/toString';\n\nclass BaseElement extends HTMLElement {\n\tconstructor(options = {}) {\n\t\tsuper();\n\t\tthis.$refs = {};\n\t\tthis._state = {};\n\t\tthis._mutationObserver = null;\n\t\tthis._registeredEvents = [];\n\t\tthis._batchUpdate = null;\n\t\tthis._requestedUpdates = [];\n\t\tthis._options = {\n\t\t\tautoUpdate: true,\n\t\t\tdeferUpdate: true,\n\t\t\tmutationObserverOptions: {\n\t\t\t\tattributes: true,\n\t\t\t\tchildList: true,\n\t\t\t\tsubtree: false,\n\t\t\t\t...options.mutationObserverOptions,\n\t\t\t},\n\t\t\tpropertyOptions: {},\n\t\t\t...options,\n\t\t};\n\n\t\tif (options.childListUpdate !== undefined && options.childListUpdate !== null) {\n\t\t\tthis._options.mutationObserverOptions.childList = options.childListUpdate;\n\t\t\tconsole.warn(\n\t\t\t\t`[${this.localName}] Using the \"childListUpdate\" option is deprecated and will be removed before 1.0! Please use the \"mutationObserverOptions\" dictionary instead. See the docs for more info`,\n\t\t\t);\n\t\t}\n\t}\n\n\tconnectedCallback() {\n\t\t// define all attributes to \"this\" as properties\n\t\tthis.defineAttributesAsProperties();\n\n\t\t// define all properties to \"this\"\n\t\tthis.defineProperties();\n\n\t\t// define all computed properties to \"this\"\n\t\tthis.defineComputedProperties();\n\n\t\t// define everything that should be observed\n\t\tthis.defineObserver();\n\n\t\tif (this.hasAttribute('defer-update') || this._options.deferUpdate) {\n\t\t\t// don't updates/render, but register refs and events\n\t\t\tthis.registerEventsAndRefs();\n\n\t\t\tthis.triggerHook('connected');\n\t\t} else {\n\t\t\tthis.requestUpdate({ notify: false }).then(() => {\n\t\t\t\tthis.triggerHook('connected');\n\t\t\t});\n\t\t}\n\t}\n\n\tdefineObserver() {\n\t\t// see: https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver#Example_usage\n\t\tthis._mutationObserver = new MutationObserver((mutations) => {\n\t\t\tmutations.forEach((mutation) => {\n\t\t\t\tif (\n\t\t\t\t\tmutation.type === 'attributes' &&\n\t\t\t\t\tmutation.target === this &&\n\t\t\t\t\tthis._state.hasOwnProperty(dashToCamel(mutation.attributeName))\n\t\t\t\t) {\n\t\t\t\t\t// update property by invoking the setter\n\t\t\t\t\tthis[dashToCamel(mutation.attributeName)] = parseAttribute(\n\t\t\t\t\t\tthis.getAttribute(mutation.attributeName),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (mutation.type === 'attributes' && mutation.target !== this) {\n\t\t\t\t\tthis.requestUpdate();\n\t\t\t\t}\n\t\t\t\tif (mutation.type === 'childList') {\n\t\t\t\t\tthis.requestUpdate();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis._mutationObserver.observe(this, {\n\t\t\tattributes: true,\n\t\t\tchildList: true,\n\t\t\tsubtree: false,\n\t\t\t...this._options.mutationObserverOptions,\n\t\t});\n\t}\n\n\tdisconnectedCallback() {\n\t\t// remove events for elements in the component\n\t\tthis.removeEvents();\n\n\t\t// remove observers\n\t\tif (this._mutationObserver) this._mutationObserver.disconnect();\n\n\t\tthis.triggerHook('disconnected');\n\t}\n\n\trequestUpdate(options = { notify: true }) {\n\t\tif (options.notify === true) {\n\t\t\tthis.triggerHook('beforeUpdate');\n\t\t}\n\n\t\tif (this._batchUpdate) {\n\t\t\tcancelAnimationFrame(this._batchUpdate);\n\t\t\tthis._batchUpdate = false;\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._requestedUpdates.push({ resolve, reject });\n\t\t\tthis._batchUpdate = requestAnimationFrame(() => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.update(options);\n\t\t\t\t\tthis._requestedUpdates.forEach(({ resolve, reject }) => resolve());\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// console.error('Update error', e)\n\t\t\t\t\tthis._requestedUpdates.forEach(({ resolve, reject }) => reject(e));\n\t\t\t\t}\n\t\t\t\tthis._requestedUpdates = [];\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * This should be called by the template component AFTER adding the template to\n\t * the DOM.\n\t * Here we will register the events and the refs for the element.\n\t */\n\tupdate(options = { notify: true }) {\n\t\tthis.registerEventsAndRefs();\n\t\tif (options.notify === true) {\n\t\t\tthis.triggerHook('afterUpdate');\n\t\t}\n\t}\n\n\t/**\n\t * Register events and refs for the component\n\t */\n\tregisterEventsAndRefs() {\n\t\t// register events for elements in the component\n\t\tthis.registerEvents();\n\n\t\t// register $refs\n\t\tthis.registerRefs();\n\t}\n\n\t/**\n\t * Defines all attributes assigned in the HTML for the element as properties on the element\n\t * If the value for an attribute can be parsed to an object or array, it will do so\n\t */\n\tdefineAttributesAsProperties() {\n\t\tconst ignoreAttributes = ['class', 'style'];\n\t\tArray.from(this.attributes)\n\t\t\t.filter((attribute) => {\n\t\t\t\treturn !ignoreAttributes.includes(attribute.name);\n\t\t\t})\n\t\t\t.forEach((attribute) => {\n\t\t\t\tthis.defineProperty(dashToCamel(attribute.name), parseAttribute(attribute.value), true);\n\t\t\t});\n\t}\n\n\t/**\n\t * Properties to be defined and assigned on the element. Should be overwritten in child components\n\t * Properties defined here will also trigger a update() when changed.\n\t * eg. { stringProperty: 'value', numberProperty: 13, booleanProperty: true } }\n\t * @return {{}}\n\t */\n\tproperties() {\n\t\treturn {};\n\t}\n\n\t/**\n\t * Defines properties on the element based on keys from this.properties()\n\t * Will trigger update() when a property was changed\n\t */\n\tdefineProperties() {\n\t\tObject.keys(this.properties()).forEach((prop) => {\n\t\t\t// when mixing shadow dom elements with light dom elements and nesting custom elements\n\t\t\t// it might occur that properties where set on an element before it was\n\t\t\t// registered or connected. To avoid such timing issues we check\n\t\t\t// if a value was set for that specific property on the\n\t\t\t// prototype before assigning a default value\n\t\t\tconst value = this[prop] || this.properties()[prop];\n\t\t\tthis.defineProperty(prop, value);\n\t\t});\n\t}\n\n\t/**\n\t * Define a property on the element\n\t * Will trigger watch() function when a property was changed\n\t * Will trigger update() when a property was changed\n\t */\n\tdefineProperty(property, value, reflectAttribute = false) {\n\t\tif (this._state.hasOwnProperty(property)) {\n\t\t\t// property has already been defined as an attribute nothing to do here\n\t\t\treturn;\n\t\t}\n\n\t\t// if property did not come from an attribute but has the option to reflect\n\t\tif (!reflectAttribute && this._options.propertyOptions[property]?.reflect === true) {\n\t\t\tthis.reflectProperty({ property: property, newValue: value });\n\t\t}\n\n\t\t// remove attribute if reflect is set to false explicitly in options\n\t\tif (this._options.propertyOptions[property]?.reflect === false) {\n\t\t\tthis.removeAttribute(camelToDash(property));\n\t\t}\n\n\t\tthis._state[property] = value;\n\n\t\tObject.defineProperty(this, property, {\n\t\t\tget: () => {\n\t\t\t\treturn this._state[property];\n\t\t\t},\n\t\t\tset: (newValue) => {\n\t\t\t\tconst oldValue = this._state[property];\n\t\t\t\tconst newValueString = JSON.stringify(newValue);\n\n\t\t\t\tif (JSON.stringify(oldValue) !== newValueString) {\n\t\t\t\t\tthis._state[property] = newValue;\n\n\t\t\t\t\tif (reflectAttribute || this._options.propertyOptions[property]?.reflect === true) {\n\t\t\t\t\t\tthis.reflectProperty({ property, newValue, newValueString });\n\t\t\t\t\t}\n\n\t\t\t\t\tconst informWatchedPropertiesAndDispatchChangeEvent = () => {\n\t\t\t\t\t\t// notify watched properties (after update())\n\t\t\t\t\t\tif (property in this.watch()) {\n\t\t\t\t\t\t\tthis.watch()[property](newValue, oldValue);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// dispatch change event\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tproperty in this._options['propertyOptions'] &&\n\t\t\t\t\t\t\tthis._options['propertyOptions'][property]['notify'] === true\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.dispatch(`${camelToDash(property)}-changed`, newValue, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tif (this._options.autoUpdate) {\n\t\t\t\t\t\tthis.requestUpdate({\n\t\t\t\t\t\t\tnotify: true,\n\t\t\t\t\t\t\tproperty: property,\n\t\t\t\t\t\t\tnewValue: newValue,\n\t\t\t\t\t\t\tnewValueString: newValueString,\n\t\t\t\t\t\t\toldValue: oldValue,\n\t\t\t\t\t\t}).finally(() => {\n\t\t\t\t\t\t\tinformWatchedPropertiesAndDispatchChangeEvent();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinformWatchedPropertiesAndDispatchChangeEvent();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t},\n\t\t});\n\t}\n\n\treflectProperty(options) {\n\t\tconst { property, newValue } = options;\n\t\tconst newValueString = options.newValueString || JSON.stringify(newValue);\n\n\t\tif (newValue === undefined || newValue === null || isNaN(newValue)) {\n\t\t\t// these would be reflected as strings: \"undefined\" || \"null\" || \"NaN\"\n\t\t\t// which is not the desired behaviour. Therefore we reflect them as empty strings\n\t\t\tthis.setAttribute(camelToDash(property), '');\n\t\t} else {\n\t\t\tconst attributeValue = isObjectLike(newValue) ? newValueString : newValue;\n\t\t\tthis.setAttribute(camelToDash(property), attributeValue);\n\t\t}\n\t}\n\n\t// Deprecated\n\thooks() {\n\t\treturn {};\n\t}\n\n\t// Connected lifecycle hook\n\tconnected() {}\n\n\t// BeforeUpdate lifecycle hook\n\tbeforeUpdate() {}\n\n\t// AfterUpdate lifecycle hook\n\tafterUpdate() {}\n\n\t// Disconnected lifecycle hook\n\tdisconnected() {}\n\n\t// Triggers a lifecycle hook based on the name\n\ttriggerHook(name) {\n\t\tif (this.hooks && name in this.hooks()) {\n\t\t\tconsole.warn(\n\t\t\t\t`[${this.localName}] Using the hooks() map for lifecycle hooks is deprecated! Please overwrite the existing lifecycle hook functions. See the docs for more info`,\n\t\t\t);\n\t\t\tthis.hooks()[name]();\n\t\t\treturn;\n\t\t}\n\n\t\tif (name in this) {\n\t\t\tthis[name]();\n\t\t}\n\t}\n\n\t/**\n\t * Watched attributes & properties to be notified to the element when changed. Should be overwritten in child components\n\t * When an attribute or property as the key was changed on the element, the callback function defined as value\n\t * will be called with `newValue` and `oldValue`\n\t * eg. { property: (oldValue, newValue) => { console.log('property changed!, oldValue, newValue); } }\n\t * @return {{}}\n\t */\n\twatch() {\n\t\treturn {};\n\t}\n\n\t// Deprecated\n\tcomputed() {\n\t\treturn {};\n\t}\n\n\t// Deprecated\n\tdefineComputedProperties() {\n\t\tObject.keys(this.computed()).forEach((prop) => {\n\t\t\tif (!this.hasOwnProperty(prop)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`[${this.localName}] Using the computed() map for computed properties is deprecated! Please use regular JS getters and return the computed value. See the docs for more info`,\n\t\t\t\t);\n\t\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\t\tget: () => this.computed()[prop](),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Return a map of events that should be registered on the element.\n\t * eg. { '.link': {\n\t *               'click': (e) => {console.log('MyElement.link - clicked', e)},\n\t *               'mouseover': (e) => {console.log('MyElement.link - mouseover()', e)},\n\t *           }\n\t *     }\n\t */\n\tevents() {\n\t\treturn {};\n\t}\n\n\t/**\n\t * Registers events on the element based on events().\n\t * Removes all previously registered events before adding them.\n\t */\n\tregisterEvents() {\n\t\t// remove all previously registered events to prevent duplicate triggers\n\t\tthis.removeEvents();\n\n\t\t// register events\n\t\tconst eventDefinitions = this.events();\n\t\tObject.keys(eventDefinitions).forEach((elementSelector) => {\n\t\t\tconst events = eventDefinitions[elementSelector];\n\t\t\tconst selectorWhiteList = { window, document, this: this.getRoot() };\n\t\t\tconst whiteListElement = selectorWhiteList[elementSelector];\n\t\t\tconst eventTargets = whiteListElement\n\t\t\t\t? [whiteListElement]\n\t\t\t\t: this.getRoot().querySelectorAll(elementSelector);\n\n\t\t\teventTargets.forEach((eventTarget) => {\n\t\t\t\tObject.keys(events).forEach((eventName) => {\n\t\t\t\t\tconst callback = events[eventName].bind(this);\n\t\t\t\t\teventTarget.addEventListener(eventName, callback);\n\t\t\t\t\tthis._registeredEvents.push({ eventTarget, eventName, callback });\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes all events from the element that where previously registered from the events() map.\n\t */\n\tremoveEvents() {\n\t\tthis._registeredEvents.forEach(({ eventTarget, eventName, callback }) => {\n\t\t\tif (eventTarget === window || eventTarget === document || this.getRoot().contains(eventTarget)) {\n\t\t\t\teventTarget.removeEventListener(eventName, callback);\n\t\t\t}\n\t\t});\n\t\tthis._registeredEvents = [];\n\t}\n\n\t/**\n\t * Stores an object that references child elements & DOM nodes that have a ref attribute defined.\n\t * References will be accessible on the element under this.$refs\n\t */\n\tregisterRefs() {\n\t\tconst refsNodeList = this.getRoot().querySelectorAll('[ref]');\n\t\tconst refsArray = Array.from(refsNodeList);\n\t\tconst refsMap = {};\n\n\t\trefsArray.forEach((refNode) => {\n\t\t\tconst refKey = refNode.getAttribute('ref');\n\t\t\trefsMap[refKey] = refNode;\n\t\t});\n\n\t\tthis.$refs = refsMap;\n\t}\n\n\t// Helper function for dispatching custom events\n\tdispatch(name, data, bubble = false, cancelable = false, composed = false) {\n\t\tconst event = new CustomEvent(name, {\n\t\t\tbubbles: bubble,\n\t\t\tcancelable: cancelable,\n\t\t\tcomposed: composed,\n\t\t\tdetail: data,\n\t\t});\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t// Get the root element\n\tgetRoot() {\n\t\treturn this;\n\t}\n}\n\nexport { BaseElement, getClosestParentCustomElementNode, isOfSameNodeType };\n","import { BaseElement } from './BaseElement';\nimport { supportsAdoptingStyleSheets, getShadowParentOrBody } from './util/DOMHelper';\nexport { i18n } from './util/i18n';\n\nclass StyledElement extends BaseElement {\n\tstatic globalStyles = null;\n\n\tstatic updateGlobalStyles() {\n\t\t// this is a runtime dependency so that every shadow dom can make use of global css\n\t\t// we assume these styles to be inlined into the document\n\t\tStyledElement.globalStyles = document.getElementById('globalStyles');\n\n\t\tif (StyledElement.globalStyles && StyledElement['globalStyleSheet']) {\n\t\t\t//updates already adopted global styles\n\t\t\tStyledElement['globalStyleSheet'].replaceSync(StyledElement.globalStyles.textContent);\n\t\t}\n\t}\n\n\tconstructor(options) {\n\t\tsuper({\n\t\t\tdeferUpdate: false,\n\t\t\tshadowRender: false,\n\t\t\tstyles: [],\n\t\t\tadoptGlobalStyles: true,\n\t\t\t...options,\n\t\t});\n\t\tthis._styles = [...this._options.styles, ...this.styles()];\n\t}\n\n\tconnectedCallback() {\n\t\tsuper.connectedCallback();\n\n\t\tif (supportsAdoptingStyleSheets() && this._options.shadowRender) {\n\t\t\t// adopting does only make sense in shadow dom. Fall back to append for light elements\n\t\t\tthis.adoptStyleSheets();\n\t\t} else if (this._options.shadowRender && window.ShadyCSS !== undefined) {\n\t\t\t// if shadowRoot is polyfilled we use ShadyCSS to copy scoped styles to <head>\n\t\t\twindow.ShadyCSS.ScopingShim.prepareAdoptedCssText(this._styles, this.localName);\n\t\t}\n\n\t\t// if shadowRoot is polyfilled - scope element template\n\t\tif (window.ShadyCSS !== undefined) {\n\t\t\twindow.ShadyCSS.styleElement(this);\n\t\t}\n\t}\n\n\tstyles() {\n\t\treturn [];\n\t}\n\n\tupdate(options) {\n\t\tif (!supportsAdoptingStyleSheets() || this._options.shadowRender === false) {\n\t\t\t// append stylesheets to template if not already adopted\n\t\t\tconst appendableStyles = [...this._styles];\n\t\t\tif (this._options.shadowRender && this._options.adoptGlobalStyles && !window.ShadyCSS) {\n\t\t\t\tappendableStyles.unshift(StyledElement.globalStyles?.textContent ?? '');\n\t\t\t}\n\t\t\tthis.appendStyleSheets(appendableStyles);\n\t\t}\n\t\tsuper.update(options);\n\t}\n\n\tadoptStyleSheets() {\n\t\tif (!this.constructor['cssStyleSheets']) {\n\t\t\tthis.constructor['cssStyleSheets'] = this._styles.map((style) => {\n\t\t\t\tconst sheet = new CSSStyleSheet();\n\t\t\t\tif (sheet && sheet.cssRules.length === 0) {\n\t\t\t\t\tsheet.replaceSync(style);\n\t\t\t\t}\n\t\t\t\treturn sheet;\n\t\t\t});\n\t\t}\n\n\t\tif (StyledElement.globalStyles && !StyledElement['globalStyleSheet']) {\n\t\t\tStyledElement['globalStyleSheet'] = new CSSStyleSheet();\n\t\t\tStyledElement['globalStyleSheet'].replaceSync(StyledElement.globalStyles.textContent);\n\t\t}\n\n\t\t// adopt styles\n\t\t// uses proposed solution for constructable stylesheets\n\t\t// see: https://wicg.github.io/construct-stylesheets/#proposed-solution\n\t\tthis.getRoot().adoptedStyleSheets = [\n\t\t\t...(this._options.shadowRender && this._options.adoptGlobalStyles && StyledElement['globalStyleSheet']\n\t\t\t\t? [StyledElement['globalStyleSheet']]\n\t\t\t\t: []),\n\t\t\t...this.constructor['cssStyleSheets'],\n\t\t];\n\t}\n\n\t// custom polyfill for constructable stylesheets by appending styles to the end of an element\n\tappendStyleSheets(styles) {\n\t\tconst parentDocument = getShadowParentOrBody(this.getRoot());\n\t\tstyles.forEach((style, index) => {\n\t\t\tconst identifier = this.tagName + index;\n\n\t\t\t// only append stylesheet if not already appended to shadowRoot or document\n\t\t\tif (!parentDocument.querySelector(`#${identifier}`)) {\n\t\t\t\tconst styleElement = document.createElement('style');\n\t\t\t\tstyleElement.id = identifier;\n\t\t\t\tstyleElement.style.display = 'none';\n\t\t\t\tstyleElement.textContent = style;\n\t\t\t\tparentDocument.appendChild(styleElement);\n\t\t\t}\n\t\t});\n\t}\n}\n\nStyledElement.updateGlobalStyles();\n\nexport { StyledElement };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive, NodePart } from '../lit-html.js';\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap();\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('unsafeHTML can only be used in text bindings');\n    }\n    const previousValue = previousValues.get(part);\n    if (previousValue !== undefined && isPrimitive(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = document.createElement('template');\n    template.innerHTML = value; // innerHTML casts to string internally\n    const fragment = document.importNode(template.content, true);\n    part.setValue(fragment);\n    previousValues.set(part, { value, fragment });\n});\n//# sourceMappingURL=unsafe-html.js.map","import {StyledElement} from '@webtides/element-js/src/StyledElement';\n\nimport { render, html } from \"lit-html\";\nimport { unsafeHTML } from \"lit-html/directives/unsafe-html\";\n\nexport {html, unsafeHTML};\n\nconst isOnServer = () => {\n    return (typeof global !== \"undefined\" && global.SSR);\n}\n\nexport default class MoonElement extends StyledElement {\n\n    constructor(options) {\n        super({\n            deferUpdate: false,\n            shadowRender: false,\n            styles: [],\n            adoptGlobalStyles: true,\n            mutationObserverOptions: {\n                childList: false,\n            },\n            ...options,\n        });\n        this._template = this._options.template;\n\n        if (!isOnServer() && this._options.shadowRender) {\n            this.attachShadow({mode: 'open'});\n        }\n    }\n\n    // 1. we need to skip initial render when we already have rendered server side\n    connectedCallback() {\n        // define all attributes to \"this\" as properties\n        this.defineAttributesAsProperties();\n\n        // define all properties to \"this\"\n        this.defineProperties();\n\n        // define all computed properties to \"this\"\n        this.defineComputedProperties();\n\n        // define everything that should be observed\n        this.defineObserver();\n\n        if (this.hasAttribute('ssr')) {\n\n            this.registerEventsAndRefs();\n\n            if (!isOnServer() && !this._options.shadowRender) {\n                this.triggerHook('connected');\n            }\n\n            if (!isOnServer() && this._options.shadowRender) {\n                this.requestUpdate({notify: false}).then(() => {\n                    this.triggerHook('connected');\n                });\n            }\n\n            this.setAttribute('hydrate', 'true');\n\n        } else if (this.hasAttribute('defer-update') || this._options.deferUpdate) {\n            // don't updates/render, but register refs and events\n            this.registerEventsAndRefs();\n\n            this.triggerHook('connected');\n        } else {\n            this.requestUpdate({notify: false}).then(() => {\n                this.triggerHook('connected');\n            });\n        }\n    }\n\n    // 2. we need to be able to inject properties from outside that will contain the attributes as well\n    defineProperties(properties = this.properties()) {\n        Object.keys(properties).forEach((prop) => {\n            // when mixing shadow dom elements with light dom elements and nesting custom elements\n            // it might occur that properties where set on an element before it was\n            // registered or connected. To avoid such timing issues we check\n            // if a value was set for that specific property on the\n            // prototype before assigning a default value\n            const value = this[prop] || properties[prop];\n            this.defineProperty(prop, value);\n        });\n    }\n\n    defineProperty(property, value, reflectAttribute = false) {\n        if (!isOnServer()) {\n            return super.defineProperty(property, value, reflectAttribute);\n        } else {\n            this[property] = value;\n        }\n    }\n\n    update(options) {\n        this.renderTemplate();\n\n        if (!isOnServer()) {\n            this.appendStyleSheets(this._styles);\n\n            super.update(options);\n        }\n    }\n\n    // 3. we need to inject a different context for the template method to be able to switch from lit-html to something that runs in node\n    renderTemplate() {\n        const template = this._template || this.template();\n\n        if (typeof template === 'string') {\n            // just a plain string literal. no lit-html required\n            this.getRoot().innerHTML = `${template}`;\n        } else {\n            // render via lit-html\n            render(template, this.getRoot(), {\n                scopeName: this.localName,\n                eventContext: this,\n            });\n        }\n    }\n\n    template() {\n        return '';\n    }\n\n    getRoot() {\n        return this.shadowRoot !== null ? this.shadowRoot : this;\n    }\n\n    dependencies() { return []; }\n\n    /**\n     * This will be loaded each time the custom element is found on the page.\n     * Make sure to really only load data which is unique for every element on the page.\n     *\n     * Here we can make calls to the database or any other service with data we require on each page load.\n     *\n     * If we are statically exporting the site, these properties won't ever be loaded.\n     *\n     * @param {*}\n     *\n     * @returns {Promise<{}>}   An object which holds the dynamically loaded data.\n     *                          Make sure that each key returned by this method is also present\n     *                          inside your {@link properties() } method. If a key is not\n     *                          present, it won't be passed to the client.\n     */\n    async loadDynamicProperties({ request, response }) {\n        return false;\n    }\n\n\n    /**\n     * These properties will be loaded once as the server starts up, or if\n     * we want to statically export our site.\n     *\n     * @returns {Promise<{}>}   An object which holds the statically loaded data.\n     *                          Make sure that each key returned by this method is also present\n     *                          inside your {@link properties() } method. If a key is not\n     *                          present, it won't be passed to the client.\n     */\n    static async loadStaticProperties() {\n        return false;\n    }\n\n    static get disableSSR() { return false; }\n\n    static get dynamicPropertiesCacheable() { return false; }\n}\n\nexport { isOnServer };\n","import MoonElement from \"./moon-element\";\n\nexport default class MoonDownElement extends MoonElement {\n\n    async loadDynamicProperties({ request, response }) {\n        if (!this.source) {\n            return {};\n        }\n\n        const fs = (await import(\"fs\")).default;\n\n        if (!fs.existsSync(this.source)) {\n            console.log(`File ${this.source} does not exist.`)\n            return {};\n        }\n\n        const frontmatter = require(\"@github-docs/frontmatter\");\n        const marked = require(\"marked\");\n\n        const result = frontmatter(fs.readFileSync(this.source, { encoding: \"utf-8\" }));\n\n        return {\n            text: marked(result.content),\n            ...result.data\n        }\n    }\n\n    static get dynamicPropertiesCacheable() {\n        return true;\n    }\n}\n","const scripts = ({ html }) => {\n    return html`\n        <script src=\"/libraries/webcomponents-bundle.js\" nomodule></script>\n        <script src=\"/libraries/runtime.js\" nomodule></script>\n        <script src=\"/assets/bundle.legacy.js\" nomodule></script>\n    `;\n}\n\nconst template = ({ html, context }) => {\n    return html`\n        <!doctype html>\n        <html lang=\"\">\n            <head>\n                <title>${context.title ?? \"\"}</title>\n                ${context.head ?? \"\"}\n            </head>\n            <body>\n                ${context.page ?? \"\"}\n\n                ${context.footer ?? \"\"}\n                \n                ${scripts({ html })}\n            </body>\n        </html>\n    `;\n};\n\nexport {\n    scripts\n}\n\nexport default template;\n","const HOOKS = {\r\n    HOOKS_LOADED: \"hooks-loaded\",\r\n\r\n    COMPONENTS_LOADED: \"components-loaded\",\r\n\r\n    SERVER_STARTED: \"server-started\",\r\n\r\n    ROUTES_BEFORE_REGISTER: \"routes-before-register\",\r\n    ROUTES_AFTER_REGISTER: \"routes-after-register\",\r\n\r\n    REQUEST_RECEIVED: \"request-received\",\r\n\r\n    MIDDLEWARE_REGISTER: \"middleware-register\",\r\n\r\n    CSS_LOAD: \"css-load\"\r\n};\r\n\r\nexport { HOOKS };\r\n","const getBaseRequestHeaders = () => {\n    return {\n        'Content-Type': 'application/json'\n    }\n}\n\n\nconst apiRequest = async (api, { method = \"GET\", headers = [] }) => {\n    const parts = api.split(\"/\").filter(part => part.length > 0);\n\n    try {\n        const response = await fetch([ \"api\", ...parts ].join(\"/\"), {\n            method,\n            headers: {\n                ...getBaseRequestHeaders(),\n                ...headers\n            }\n        });\n\n        if (response.ok) {\n            return {\n                success: true,\n                response,\n                data: await response.json()\n            };\n        }\n\n        return { success: false, response }\n\n    } catch (error) {\n        return { success: false, error };\n    }\n};\n\n\nexport {\n    apiRequest\n}\n","import MoonElement, { html, unsafeHTML } from \"./packages/client/elements/moon-element.js\";\nimport MoonDownElement from \"./packages/client/elements/moon-down-element\";\nimport baseLayout from \"./packages/client/layouts/base.js\";\nimport { HOOKS } from \"./packages/framework/hooks/definitions\";\nimport { apiRequest } from \"./packages/client/functions/network\";\nimport {BaseElement} from \"@webtides/element-js/src/BaseElement\";\n\nconst layouts = {\n    base: baseLayout\n}\n\nexport {\n    MoonElement,\n    MoonDownElement,\n    BaseElement,\n    layouts,\n    HOOKS,\n    apiRequest,\n    html,\n    unsafeHTML\n}\n"],"names":["isObjectLike","value","isJSON","str","JSON","parse","e","isBoolean","parseBoolean","isString","Object","prototype","toString","call","isNumber","RegExp","test","isNaN","Number","parseAttribute","parsedValue","parseFloat","dashToCamel","string","indexOf","replace","matches","toUpperCase","camelToDash","toLowerCase","getShadowParentOrBody","element","ShadowRoot","parentNode","document","body","supportsAdoptingStyleSheets","Document","CSSStyleSheet","BaseElement","HTMLElement","constructor","options","$refs","_state","_mutationObserver","_registeredEvents","_batchUpdate","_requestedUpdates","_options","autoUpdate","deferUpdate","mutationObserverOptions","attributes","childList","subtree","propertyOptions","childListUpdate","undefined","console","warn","localName","connectedCallback","defineAttributesAsProperties","defineProperties","defineComputedProperties","defineObserver","hasAttribute","registerEventsAndRefs","triggerHook","requestUpdate","notify","then","MutationObserver","mutations","forEach","mutation","type","target","hasOwnProperty","attributeName","getAttribute","observe","disconnectedCallback","removeEvents","disconnect","cancelAnimationFrame","Promise","resolve","reject","push","requestAnimationFrame","update","registerEvents","registerRefs","ignoreAttributes","Array","from","filter","attribute","includes","name","defineProperty","properties","keys","prop","property","reflectAttribute","reflect","reflectProperty","newValue","removeAttribute","get","set","oldValue","newValueString","stringify","informWatchedPropertiesAndDispatchChangeEvent","watch","dispatch","finally","setAttribute","attributeValue","hooks","connected","beforeUpdate","afterUpdate","disconnected","computed","events","eventDefinitions","elementSelector","selectorWhiteList","window","this","getRoot","whiteListElement","eventTargets","querySelectorAll","eventTarget","eventName","callback","bind","addEventListener","contains","removeEventListener","refsNodeList","refsArray","refsMap","refNode","refKey","data","bubble","cancelable","composed","event","CustomEvent","bubbles","detail","dispatchEvent","StyledElement","updateGlobalStyles","globalStyles","getElementById","replaceSync","textContent","shadowRender","styles","adoptGlobalStyles","_styles","adoptStyleSheets","ShadyCSS","ScopingShim","prepareAdoptedCssText","styleElement","appendableStyles","unshift","appendStyleSheets","map","style","sheet","cssRules","length","adoptedStyleSheets","parentDocument","index","identifier","tagName","querySelector","createElement","id","display","appendChild","isOnServer","global","SSR","MoonElement","_template","template","attachShadow","mode","renderTemplate","innerHTML","render","scopeName","eventContext","shadowRoot","dependencies","loadDynamicProperties","request","response","loadStaticProperties","disableSSR","dynamicPropertiesCacheable","MoonDownElement","source","fs","default","existsSync","log","frontmatter","require","marked","result","readFileSync","encoding","text","content","scripts","html","context","title","head","page","footer","HOOKS","HOOKS_LOADED","COMPONENTS_LOADED","SERVER_STARTED","ROUTES_BEFORE_REGISTER","ROUTES_AFTER_REGISTER","REQUEST_RECEIVED","MIDDLEWARE_REGISTER","CSS_LOAD","getBaseRequestHeaders","apiRequest","api","method","headers","parts","split","part","fetch","join","ok","success","json","error","layouts","base","baseLayout"],"mappings":"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"}