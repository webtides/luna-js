{"version":3,"file":"marked-66386a33.js","sources":["../node_modules/marked/src/marked.js"],"sourcesContent":["const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Tokenizer = require('./Tokenizer.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(extension) {\n  const opts = merge({}, extension);\n  if (extension.renderer) {\n    const renderer = marked.defaults.renderer || new Renderer();\n    for (const prop in extension.renderer) {\n      const prevRenderer = renderer[prop];\n      renderer[prop] = (...args) => {\n        let ret = extension.renderer[prop].apply(renderer, args);\n        if (ret === false) {\n          ret = prevRenderer.apply(renderer, args);\n        }\n        return ret;\n      };\n    }\n    opts.renderer = renderer;\n  }\n  if (extension.tokenizer) {\n    const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n    for (const prop in extension.tokenizer) {\n      const prevTokenizer = tokenizer[prop];\n      tokenizer[prop] = (...args) => {\n        let ret = extension.tokenizer[prop].apply(tokenizer, args);\n        if (ret === false) {\n          ret = prevTokenizer.apply(tokenizer, args);\n        }\n        return ret;\n      };\n    }\n    opts.tokenizer = tokenizer;\n  }\n  if (extension.walkTokens) {\n    const walkTokens = marked.defaults.walkTokens;\n    opts.walkTokens = (token) => {\n      extension.walkTokens(token);\n      if (walkTokens) {\n        walkTokens(token);\n      }\n    };\n  }\n  marked.setOptions(opts);\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback(token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.tokens.header) {\n          marked.walkTokens(cell, callback);\n        }\n        for (const row of token.tokens.cells) {\n          for (const cell of row) {\n            marked.walkTokens(cell, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.Tokenizer = Tokenizer;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n"],"names":["Lexer","require","Parser","Tokenizer","Renderer","TextRenderer","Slugger","merge","checkSanitizeDeprecation","escape","getDefaults","changeDefaults","defaults","marked","src","opt","callback","Error","Object","prototype","toString","call","highlight","tokens","lex","e","done","err","out","parse","length","pending","walkTokens","token","type","setTimeout","text","lang","code","escaped","message","silent","options","setOptions","use","extension","opts","renderer","prop","prevRenderer","args","ret","apply","tokenizer","prevTokenizer","cell","header","row","cells","items","parseInline","lexInline","parser","lexer","module","exports"],"mappings":"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"}